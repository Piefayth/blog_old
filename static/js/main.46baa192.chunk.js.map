{"version":3,"sources":["store/index.js","constants/actionTypes.js","styles/theme.js","components/Header.js","utils/env.js","actions/posts.js","utils/analytics.js","components/Home.js","components/Post.js","routes/index.js","utils/serviceWorker.js","index.js","reducers/posts.js","reducers/index.js","store/storeProd.js"],"names":["module","exports","require","__webpack_exports__","GET_POST_SUCCESS","GET_POST_ERROR","GET_POSTS_SUCCESS","GET_POSTS_ERROR","createMuiTheme","typography","useNextVariants","palette","accent","background","text","styles","root","backgroundColor","theme","hoverNone","textDecoration","&:hover","Header","classes","this","props","react_default","a","createElement","AppBar_default","className","position","Toolbar_default","Link_default","to","component","RouterLink","variant","color","Component","withStyles","env","process","utils_env","prodUrl","devUrl","url","getPost","id","dispatch","axios","get","concat","then","ok","post","data","type","ActionTypes","catch","error","getPostError","getPosts","posts","getPostsError","pageview","window","ga","getAll","tracker","set","send","setTimeout","Home","document","title","_this$props","Helmet","name","content","map","i","rel","href","meta","Card_default","key","card","CardMedia_default","media","image","cardTitleContainer","cardTitle","Typography_default","peek","defaultProps","connect","state","bindActionCreators","_root","_card","flexGrow","display","flex-wrap","justify-content","align-self","Object","defineProperty","breakpoints","down","width","flex-basis","height","margin","fontFamily","body1Next","fontSize","fontWeight","lineHeight","Post","postId","match","params","PR","prettyPrint","container","postTitle","postSubtitle","subtitle","react_markdown_default","source","renderers","code","node","language","value","inlineCode","markdownImageContainer","markdownImage","src","alt","_container","white-space","word-wrap","padding","text-align","flex-direction","align-items","marginTop","marginBottom","Container","styled","div","_templateObject","createBrowserHistory","Routes","HashRouter","hashType","components_Header","Switch","Route","exact","path","Boolean","location","hostname","render","es","store","configureStore","index_es","routes","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","__webpack_require__","d","middlewares","ReduxThunk","enhancer","applyMiddleware","apply","createStore"],"mappings":"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","file":"static/js/main.46baa192.chunk.js","sourcesContent":["/* eslint-disable global-require */\nmodule.exports = process.env.NODE_ENV === 'production' ? require('./storeProd') : require('./storeDev')\n","export default {\n  GET_POST_SUCCESS: 'GET_POST_SUCCESS',\n  GET_POST_ERROR: 'GET_POST_ERROR',\n  GET_POSTS_SUCCESS: 'GET_POSTS_SUCCESS',\n  GET_POSTS_ERROR: 'GET_POSTS_ERROR',\n}\n\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst palette = {\r\n    accent: \"#786CB2\",\r\n    background: \"#E4E4E1\",\r\n    text: \"#2C2C29\"\r\n}\r\n\r\nexport default createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette\r\n});","import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Link from '@material-ui/core/Link'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport theme from '../styles/theme'\n\nconst styles = {\n  root: {\n    backgroundColor: theme.palette.accent,\n  },\n  hoverNone: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'none',\n    }\n  },\n}\n\nclass Header extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <AppBar className={classes.root} position=\"relative\" >\n        <Toolbar>\n          <Link to=\"/\" component={RouterLink} variant=\"h5\" color=\"inherit\" className={classes.hoverNone}>\n            { \"Piefayth's Devblog\" }\n          </Link>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Header)\n","\r\nconst prodUrl = process.env.REACT_APP_PUBLIC_URI\r\nconst devUrl = process.env.REACT_APP_DEV_URI\r\nconst env = process.env.NODE_ENV\r\nconst url = env === 'development' ? devUrl : prodUrl\r\n\r\nexport default {\r\n    prodUrl,\r\n    devUrl,\r\n    env,\r\n    url\r\n} ","import ActionTypes from '../constants/actionTypes'\r\nimport { createAction } from 'redux-actions'\r\nimport axios from 'axios'\r\nimport env from '../utils/env'\r\n\r\nexport const getPostSuccess = post => ({\r\n    type: ActionTypes.GET_POST_SUCCESS,\r\n    post\r\n})\r\n\r\nexport const getPostError = error => ({\r\n    type: ActionTypes.GET_POST_ERROR,\r\n    error\r\n})\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n    return axios.get(`${env.url}/posts/${id}.json`)\r\n        .then(ok => (dispatch(getPostSuccess(ok.data))))\r\n        .catch(error => (dispatch(getPostError(error))))\r\n}\r\n\r\nexport const getPostsSuccess = posts => ({\r\n    type: ActionTypes.GET_POSTS_SUCCESS,\r\n    posts,\r\n})\r\n\r\nexport const getPostsError = error => ({\r\n    type: ActionTypes.GET_POSTS_ERROR,\r\n    error,\r\n})\r\n\r\nexport const getPosts = () => (dispatch) => {\r\n    return axios.get(`${env.url}/posts/index.json`)\r\n        .then(ok => (dispatch(getPostsSuccess(ok.data))))\r\n        .catch(error => (dispatch(getPostsError(error))))\r\n}","function pageview(window, url) {\r\n    if (window.ga && window.ga.getAll) {\r\n        const tracker = window.ga.getAll()[0]\r\n        tracker.set('page', url)\r\n        tracker.set('location', `https://piefayth.github.io/blog${url}`)\r\n        tracker.send('pageview')\r\n    } else {\r\n        setTimeout(() => {\r\n            pageview(window, url)\r\n        }, 500)\r\n    }\r\n}\r\n\r\nexport { pageview }","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getPosts } from '../actions/posts'\nimport { withStyles } from '@material-ui/styles'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { Helmet } from \"react-helmet\";\nimport env from '../utils/env'\nimport { pageview } from '../utils/analytics'\n\nconst styles = (theme) => { \n    return {\n        root: {\n            flexGrow: 1,\n            display: 'flex',\n            'flex-wrap': 'wrap',\n            'justify-content': 'center',\n            'align-self': 'center',\n            [theme.breakpoints.down('xl')]: {\n                width: '95%',\n            },\n            [theme.breakpoints.down('lg')]: {\n                width: '95%',\n            },\n            [theme.breakpoints.down('md')]: {\n                width: '95%',\n            },\n            [theme.breakpoints.down('sm')]: {\n                width: '95%',\n            },\n            [theme.breakpoints.down('xs')]: {\n                width: '95%',\n            },\n            marginTop: 20,\n        },\n        card: {\n            [theme.breakpoints.down('xl')]: {\n                'flex-basis': '33%',\n            },\n            [theme.breakpoints.down('lg')]: {\n                'flex-basis': '33%',\n            },\n            [theme.breakpoints.down('md')]: {\n                'flex-basis': '50%',\n            },\n            [theme.breakpoints.down('sm')]: {\n                'flex-basis': '100%',\n            },\n            [theme.breakpoints.down('xs')]: {\n                'flex-basis': '100%',\n            },\n            margin: '5px',\n        },\n        media: {\n            height: 140,\n        },\n        peek: {\n            margin: 25,\n            fontFamily: theme.typography.body1Next.fontFamily,\n            fontSize: 14,\n            fontWeight: theme.typography.body1Next.fontWeight,\n            lineHeight: theme.typography.body1Next.lineHeight,\n        },\n        cardTitle: {\n            color: theme.palette.text,\n            '&:hover': {\n                textDecoration: 'none',\n            },\n            fontSize: 36,\n        },\n        cardTitleContainer: {\n            margin: 20,\n        }\n    }\n}\n\nclass Home extends Component {\n    componentDidMount() {\n        this.props.getPosts()\n        document.title = \"Piefayth's Devblog\"\n        pageview(window, `/`)\n    }\n    \n    render() {\n        const { classes, posts } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <Helmet>\n                    <meta name=\"keywords\" content=\"unity, ecs, unity ecs, game development, gamedev\" />\n                    <meta name=\"description\" content=\"A blog (mostly) about game development in Unity.\" />\n                    \n                    {posts.map((post, i) => {\n                        return (\n                            <link rel=\"canonical\" href={`https://piefayth.github.io/blog/#!/posts/${post.meta.id}`} />\n                        )\n                    })}\n                </Helmet>\n                {posts.map((post, i) => {\n                    return (\n                        <Card key={`${post.meta.id}${i + 1}`} className={classes.card}>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={`${env.url}/media/${post.meta.image}.jpg`}\n                                />\n                            <p className={classes.cardTitleContainer}>\n                                <Link to={`/posts/${post.meta.id}`} variant=\"h2\" component={RouterLink} className={classes.cardTitle}> {post.meta.title} </Link>\n                            </p>\n                            <Typography className={classes.peek} component=\"p\">\n                                { post.meta.peek }\n                            </Typography>\n                        </Card>\n                        \n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n    classes: PropTypes.object.isRequired,\n}\n\n\nHome.defaultProps = {\n    posts: [],\n}\n\nconst mapDispatchToProps = (dispatch) => (bindActionCreators({\n    getPosts\n}, dispatch))\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.posts.posts,\n    }\n}\n\nexport default(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home)))","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\nimport Typography from '@material-ui/core/Typography'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport { Helmet } from \"react-helmet\"\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getPost } from '../actions/posts'\nimport { withStyles } from '@material-ui/styles'\nimport env from '../utils/env'\nimport { pageview } from '../utils/analytics'\n\nconst styles = (theme) => { \n    return {\n        code: {\n            display: 'block',\n            'white-space': 'pre-wrap',\n            'word-wrap': 'break-word', \n            padding: '15px'\n        },\n        inlineCode: {\n            'white-space': 'pre-wrap',\n            'word-wrap': 'break-word', \n        },\n        content: {\n            'text-align': 'left',\n            'align-self': 'center',\n            width: '100%',\n            fontFamily: theme.typography.body1Next.fontFamily,\n            fontSize: theme.typography.body1Next.fontSize,\n            lineHeight: theme.typography.body1Next.lineHeight,\n            fontWeight: theme.typography.body1Next.fontWeight,\n        },\n        container: {\n            display: 'flex',\n            'flex-direction': 'column',\n            'align-items': 'center',\n            'align-self': 'center',\n            padding: 20,\n            marginTop: 20,\n            [theme.breakpoints.down('xl')]: {\n                width: '60%',\n            },\n            [theme.breakpoints.down('lg')]: {\n                width: '70%',\n            },\n            [theme.breakpoints.down('md')]: {\n                width: '70%',\n            },\n            [theme.breakpoints.down('sm')]: {\n                width: '80%',\n            },\n            [theme.breakpoints.down('xs')]: {\n                width: '88%',\n            }\n        },\n        media: {\n            height: 300,\n            width: '100%',\n        },\n        postTitle: {\n            color: theme.palette.text,\n            marginTop: 25,\n            width: '90%',\n            'white-space': 'pre-wrap',\n            'word-wrap': 'break-word', \n            [theme.breakpoints.down('xs')]: {\n                fontSize: 44,\n            }\n        },\n        postSubtitle: {\n            marginTop: 10,\n            marginBottom: 25,\n        },\n        markdownImage: {\n            display: 'block',\n            width: '80%',\n            height: '80%',\n        },\n        markdownImageContainer: {\n            display: 'flex',\n            'justify-content': 'center',\n            padding: 20,\n        }\n    }\n}\n\nclass Post extends Component {\n    componentDidMount() {\n        const postId = this.props.match.params.id\n        pageview(window, `/posts/${postId}`)\n\n        this.props.getPost(postId)\n            .then(() => {\n                window.PR.prettyPrint()\n            })\n    }\n\n    componentDidUpdate() {\n        window.PR.prettyPrint()\n        document.title = this.props.post.meta.title\n    }\n    \n    render() {\n        const { classes, post } = this.props\n\n        if (!post.post) {\n            return null\n        }\n\n        return (\n            <Card className={classes.container}>\n                <Helmet>\n                    <meta name=\"keywords\" content=\"unity, ecs, unity ecs, game development, gamedev\" />\n                    <meta name=\"description\" content={post.meta.peek} />\n                </Helmet>\n                <CardMedia\n                    className={classes.media}\n                    image={`${env.url}/media/${post.meta.image}.jpg`}\n                />\n                <Typography className={classes.postTitle} variant='h2' component=\"p\">\n                    { post.meta.title }\n                </Typography>\n\n                <Typography className={classes.postSubtitle} variant='h5' component=\"p\">\n                    { post.meta.subtitle }\n                </Typography>\n\n                <ReactMarkdown \n                    source={post.post}\n                    className={classes.content}\n                    renderers={{\n                        code: (node) => {\n                            return <p><code className={`prettyprint ${node.language}-html ${classes.code}`}>{ node.value }</code></p>\n                        },\n                        inlineCode: (node) => {\n                            return <span><code className={classes.inlineCode}>{ node.value }</code></span>\n                        },\n                        image: (node) => {\n                            return (\n                                <span className={classes.markdownImageContainer}>\n                                    <img className={classes.markdownImage} src={`${env.url}/media/${node.src}.jpg`} alt={node.alt} />\n                                </span>\n                            )\n                        }\n                    }}\n                />\n            </Card>\n        )\n    }\n}\n\nPost.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        }).isRequired\n    }).isRequired,\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object,\n    classes: PropTypes.object.isRequired,\n}\n\nPost.defaultProps = {\n    post: {},\n}\n\nconst mapDispatchToProps = (dispatch) => (bindActionCreators({\n    getPost\n}, dispatch))\n\nconst mapStateToProps = (state) => {\n    return {\n        post: state.posts.post,\n    }\n}\n\nexport default(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Post)))","import React from 'react'\nimport Header from '../components/Header'\nimport Home from '../components/Home'\nimport Post from '../components/Post'\nimport Grid from '@material-ui/core/Grid';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport styled from '@emotion/styled'\nimport theme from '../styles/theme'\n\nconst Container = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  background-color: ${theme.palette.background}\n`\nexport const history = createBrowserHistory()\n\nfunction Routes() {\n  return (\n    <HashRouter hashType=\"hashbang\">\n      <Container>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/posts/:id\" component={Post} />\n          </Switch>\n      </Container>\n    </HashRouter>\n  )\n}\n\nexport default Routes\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\nimport Routes from './routes'\nimport './styles/globalStyles.css'\nimport * as serviceWorker from './utils/serviceWorker'\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from './styles/theme'\n\nrender(\n  <Provider store={configureStore()}>\n    <ThemeProvider theme={theme}>\n      <Routes />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import ActionTypes from '../constants/actionTypes'\r\n\r\nconst initialState = {}\r\n\r\nexport default function posts(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_POST_SUCCESS:\r\n      return {\r\n          ...state,\r\n          post: action.post\r\n      }\r\n    case ActionTypes.GET_POST_ERROR: {\r\n        return {\r\n            ...state,\r\n            post: null,\r\n            error: action.error,\r\n        }\r\n    }\r\n    case ActionTypes.GET_POSTS_SUCCESS:\r\n        return {\r\n            ...state,\r\n            posts: action.posts\r\n        }\r\n    case ActionTypes.GET_POSTS_ERROR: {\r\n        return {\r\n            ...state,\r\n            posts: null,\r\n            error: action.error,\r\n        }\r\n    }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\nimport posts from './posts'\n\nconst rootReducer = combineReducers({\n  posts,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nconst middlewares = [ReduxThunk]\nconst enhancer = [applyMiddleware(...middlewares)]\n\nexport default function configureStore(initialState = {}) {\n  return createStore(rootReducer, initialState, ...enhancer)\n}\n"],"sourceRoot":""}